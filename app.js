// frontend/src/App.js
// –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ChessProfi
import React, { useState, useEffect } from 'react';
import { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';
import './styles/App.css';

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã
import Home from './pages/Home';
import Login from './pages/Login';
import Game from './pages/Game';
import Dashboard from './pages/Dashboard';
import Navigation from './components/Navigation';

function App() {
  const [user, setUser] = useState(null);
  const [loading, setLoading] = useState(true);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  useEffect(() => {
    const token = localStorage.getItem('token');
    const userData = localStorage.getItem('user');
    
    if (token && userData) {
      setUser(JSON.parse(userData));
    }
    setLoading(false);
  }, []);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—Ö–æ–¥–∞
  const handleLogin = (userData, token) => {
    localStorage.setItem('token', token);
    localStorage.setItem('user', JSON.stringify(userData));
    setUser(userData);
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã—Ö–æ–¥–∞
  const handleLogout = () => {
    localStorage.removeItem('token');
    localStorage.removeItem('user');
    setUser(null);
  };

  if (loading) {
    return <div className="loading">–ó–∞–≥—Ä—É–∑–∫–∞ ChessProfi...</div>;
  }

  return (
    <Router>
      <div className="App">
        <Navigation user={user} onLogout={handleLogout} />
        
        <main className="main-content">
          <Routes>
            <Route path="/" element={<Home />} />
            <Route 
              path="/login" 
              element={user ? <Navigate to="/dashboard" /> : <Login onLogin={handleLogin} />} 
            />
            <Route 
              path="/dashboard" 
              element={user ? <Dashboard user={user} /> : <Navigate to="/login" />} 
            />
            <Route 
              path="/game/:gameId" 
              element={user ? <Game user={user} /> : <Navigate to="/login" />} 
            />
          </Routes>
        </main>
        
        <footer className="footer">
          <p>¬© 2024 ChessProfi - –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è —à–∞—Ö–º–∞—Ç–∞–º</p>
        </footer>
      </div>
    </Router>
  );
}

export default App;

// frontend/src/index.js
// –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
import React from 'react';
import ReactDOM from 'react-dom/client';
import './styles/App.css';
import App from './App';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

// frontend/src/pages/Home.js
// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
import React from 'react';
import { Link } from 'react-router-dom';

function Home() {
  return (
    <div className="home-page">
      <div className="hero-section">
        <h1>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ChessProfi</h1>
        <p className="subtitle">
          –°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è —à–∞—Ö–º–∞—Ç–∞–º —Å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º–∏ —Ç—Ä–µ–Ω–µ—Ä–∞–º–∏
        </p>
        
        <div className="features">
          <div className="feature-card">
            <h3>üéØ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —É—Ä–æ–∫–∏</h3>
            <p>–ó–∞–Ω–∏–º–∞–π—Ç–µ—Å—å —Å –æ–ø—ã—Ç–Ω—ã–º–∏ —Ç—Ä–µ–Ω–µ—Ä–∞–º–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏</p>
          </div>
          
          <div className="feature-card">
            <h3>üìä –ê–Ω–∞–ª–∏–∑ –ø–∞—Ä—Ç–∏–π</h3>
            <p>–ü–æ–ª—É—á–∞–π—Ç–µ –¥–µ—Ç–∞–ª—å–Ω—ã–π —Ä–∞–∑–±–æ—Ä –≤–∞—à–∏—Ö –∏–≥—Ä —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏</p>
          </div>
          
          <div className="feature-card">
            <h3>üèÜ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞</h3>
            <p>–°–ª–µ–¥–∏—Ç–µ –∑–∞ —Å–≤–æ–∏–º —Ä–∞–∑–≤–∏—Ç–∏–µ–º –∏ –¥–æ—Å—Ç–∏–≥–∞–π—Ç–µ –Ω–æ–≤—ã—Ö –≤—ã—Å–æ—Ç</p>
          </div>
        </div>
        
        <div className="cta-buttons">
          <Link to="/login" className="btn btn-primary">
            –ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ
          </Link>
          <Link to="/login" className="btn btn-secondary">
            –í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É
          </Link>
        </div>
      </div>
    </div>
  );
}

export default Home;

// frontend/src/pages/Login.js
// –°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import api from '../services/api';

function Login({ onLogin }) {
  const [isLogin, setIsLogin] = useState(true);
  const [formData, setFormData] = useState({
    email: '',
    password: '',
    name: '',
    role: 'student'
  });
  const [error, setError] = useState('');
  const [loading, setLoading] = useState(false);
  const navigate = useNavigate();

  const handleChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setError('');
    setLoading(true);

    try {
      const endpoint = isLogin ? '/auth/login' : '/auth/register';
      const response = await api.post(endpoint, formData);
      
      onLogin(response.data.user, response.data.token);
      navigate('/dashboard');
    } catch (err) {
      setError(err.response?.data?.error || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞');
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="login-page">
      <div className="login-container">
        <h2>{isLogin ? '–í—Ö–æ–¥ –≤ ChessProfi' : '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ ChessProfi'}</h2>
        
        {error && <div className="error-message">{error}</div>}
        
        <form onSubmit={handleSubmit}>
          {!isLogin && (
            <div className="form-group">
              <label>–ò–º—è</label>
              <input
                type="text"
                name="name"
                value={formData.name}
                onChange={handleChange}
                required={!isLogin}
                placeholder="–í–∞—à–µ –∏–º—è"
              />
            </div>
          )}
          
          <div className="form-group">
            <label>Email</label>
            <input
              type="email"
              name="email"
              value={formData.email}
              onChange={handleChange}
              required
              placeholder="email@example.com"
            />
          </div>
          
          <div className="form-group">
            <label>–ü–∞—Ä–æ–ª—å</label>
            <input
              type="password"
              name="password"
              value={formData.password}
              onChange={handleChange}
              required
              placeholder="–ú–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤"
            />
          </div>
          
          {!isLogin && (
            <div className="form-group">
              <label>–†–æ–ª—å</label>
              <select name="role" value={formData.role} onChange={handleChange}>
                <option value="student">–£—á–µ–Ω–∏–∫</option>
                <option value="coach">–¢—Ä–µ–Ω–µ—Ä</option>
              </select>
            </div>
          )}
          
          <button type="submit" className="btn btn-primary" disabled={loading}>
            {loading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : (isLogin ? '–í–æ–π—Ç–∏' : '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è')}
          </button>
        </form>
        
        <p className="toggle-form">
          {isLogin ? '–ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞?' : '–£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç?'}
          <button onClick={() => setIsLogin(!isLogin)} className="link-button">
            {isLogin ? '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è' : '–í–æ–π—Ç–∏'}
          </button>
        </p>
      </div>
    </div>
  );
}

export default Login;

// frontend/src/pages/Dashboard.js
// –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import api from '../services/api';
import GameList from '../components/GameList';

function Dashboard({ user }) {
  const [games, setGames] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    fetchGames();
  }, []);

  const fetchGames = async () => {
    try {
      const response = await api.get('/games/my-games');
      setGames(response.data);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–≥—Ä:', error);
    } finally {
      setLoading(false);
    }
  };

  const createNewGame = async () => {
    try {
      // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã –≤—ã–±–æ—Ä –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞
      const response = await api.post('/games/create', {
        opponentId: '507f1f77bcf86cd799439011' // –í—Ä–µ–º–µ–Ω–Ω—ã–π ID –¥–ª—è –¥–µ–º–æ
      });
      
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –Ω–æ–≤–æ–π –∏–≥—Ä–µ
      window.location.href = `/game/${response.data._id}`;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä—ã:', error);
    }
  };

  return (
    <div className="dashboard-page">
      <div className="dashboard-header">
        <h1>–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</h1>
        <div className="user-info">
          <h2>–ü—Ä–∏–≤–µ—Ç, {user.name}!</h2>
          <p>–†–æ–ª—å: {user.role === 'student' ? '–£—á–µ–Ω–∏–∫' : '–¢—Ä–µ–Ω–µ—Ä'}</p>
          <p>–†–µ–π—Ç–∏–Ω–≥: {user.rating}</p>
        </div>
      </div>

      <div className="dashboard-content">
        <div className="actions-section">
          <button onClick={createNewGame} className="btn btn-primary">
            –ù–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É
          </button>
        </div>

        <div className="games-section">
          <h3>–ú–æ–∏ –ø–∞—Ä—Ç–∏–∏</h3>
          {loading ? (
            <p>–ó–∞–≥—Ä—É–∑–∫–∞ –ø–∞—Ä—Ç–∏–π...</p>
          ) : games.length > 0 ? (
            <GameList games={games} currentUserId={user.id} />
          ) : (
            <p>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å—ã–≥—Ä–∞–Ω–Ω—ã—Ö –ø–∞—Ä—Ç–∏–π</p>
          )}
        </div>
      </div>
    </div>
  );
}

export default Dashboard;

// frontend/src/services/api.js
// –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API
import axios from 'axios';

const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä axios —Å –±–∞–∑–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
const api = axios.create({
  baseURL: API_URL,
  headers: {
    'Content-Type': 'application/json'
  }
});

// –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –∫ –∫–∞–∂–¥–æ–º—É –∑–∞–ø—Ä–æ—Å—É, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
api.interceptors.request.use(
  (config) => {
    const token = localStorage.getItem('token');
    if (token) {
      config.headers.Authorization = `Bearer ${token}`;
    }
    return config;
  },
  (error) => {
    return Promise.reject(error);
  }
);

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –æ—Ç–≤–µ—Ç–∞
api.interceptors.response.use(
  (response) => response,
  (error) => {
    if (error.response?.status === 401) {
      // –¢–æ–∫–µ–Ω –∏—Å—Ç–µ–∫ –∏–ª–∏ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π - –≤—ã—Ö–æ–¥–∏–º
      localStorage.removeItem('token');
      localStorage.removeItem('user');
      window.location.href = '/login';
    }
    return Promise.reject(error);
  }
);

export default api;